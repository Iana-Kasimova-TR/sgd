{
    "elapsed_time_sec": 1024.894474029541,
    "files": {
        "/Users/Iana_Kasimova/sgd/model.py": {
            "functions": [
                {
                    "line": "EmbeddingModel.__init__",
                    "lineno": 6,
                    "memory_samples": [
                        [
                            110069643626,
                            192.59417353712394
                        ],
                        [
                            110323532141,
                            219.40936244911202
                        ],
                        [
                            110323541277,
                            165.94518215150217
                        ]
                    ],
                    "n_avg_mb": 80.26943492889404,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.01359888512014548,
                    "n_cpu_percent_python": 0.0011928741958531508,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 80.26943492889404,
                    "n_malloc_mb": 80.26943492889404,
                    "n_mallocs": 1,
                    "n_peak_mb": 80.26943492889404,
                    "n_python_fraction": 0.0024237257854689597,
                    "n_sys_percent": 0.009592387423844693,
                    "n_usage_fraction": 0.05403158132546913
                },
                {
                    "line": "EmbeddingModel.update_embed",
                    "lineno": 11,
                    "memory_samples": [
                        [
                            138827722330,
                            221.40010786629662
                        ],
                        [
                            158042048780,
                            221.96409428328545
                        ],
                        [
                            163705966503,
                            221.12679645279053
                        ],
                        [
                            170774274205,
                            221.78905015457582
                        ],
                        [
                            176882538979,
                            220.82034356755963
                        ],
                        [
                            216446515141,
                            221.003900077398
                        ],
                        [
                            234485618593,
                            221.36744561068096
                        ],
                        [
                            246125389401,
                            221.25537265826208
                        ],
                        [
                            248816655336,
                            221.57685118459548
                        ],
                        [
                            253593497950,
                            222.04666395084047
                        ],
                        [
                            266807947640,
                            222.06404827788737
                        ],
                        [
                            270647888571,
                            220.90638461295393
                        ],
                        [
                            293654771306,
                            221.9483172253845
                        ],
                        [
                            296140246045,
                            222.2171234905766
                        ],
                        [
                            301159246037,
                            221.32462735085363
                        ],
                        [
                            317013358534,
                            221.63705659743573
                        ],
                        [
                            322203718969,
                            222.12832456634388
                        ],
                        [
                            323387424497,
                            220.7623162971179
                        ],
                        [
                            332204844870,
                            222.12815107325585
                        ],
                        [
                            357073309494,
                            222.2164791398879
                        ],
                        [
                            360139597118,
                            222.69285232652842
                        ],
                        [
                            364197834803,
                            221.540786075469
                        ],
                        [
                            365206092971,
                            221.6335310731917
                        ],
                        [
                            371895953441,
                            220.84887214270336
                        ],
                        [
                            384523040240,
                            220.99197992347584
                        ],
                        [
                            388777910344,
                            222.86956439787522
                        ],
                        [
                            393334161363,
                            221.78236833817004
                        ],
                        [
                            394632457784,
                            221.87445754715156
                        ],
                        [
                            397810044695,
                            222.09755552989182
                        ],
                        [
                            403206331137,
                            221.15043614055188
                        ],
                        [
                            408245744660,
                            221.75901997800221
                        ],
                        [
                            409778546232,
                            221.858896291661
                        ],
                        [
                            419624908001,
                            221.41426197691092
                        ],
                        [
                            424667213897,
                            222.10847142991977
                        ],
                        [
                            428322610967,
                            221.1809535537929
                        ],
                        [
                            439954081878,
                            221.15085143053423
                        ],
                        [
                            448313886068,
                            221.92614724277053
                        ],
                        [
                            467114565707,
                            221.35363076179095
                        ],
                        [
                            484397708851,
                            221.41610375042444
                        ],
                        [
                            492028237383,
                            222.16160670245074
                        ],
                        [
                            496889046245,
                            221.1467444069248
                        ],
                        [
                            499092454770,
                            221.3472266051141
                        ],
                        [
                            513878707884,
                            222.04347477793698
                        ],
                        [
                            517792710418,
                            221.01003863471468
                        ],
                        [
                            523682558193,
                            221.60269081898153
                        ],
                        [
                            533503560976,
                            221.36376199542124
                        ],
                        [
                            537632163997,
                            221.84495847327844
                        ],
                        [
                            556258074772,
                            221.06604271535687
                        ],
                        [
                            557360987173,
                            221.15809531077602
                        ],
                        [
                            590974831858,
                            221.24160518978934
                        ],
                        [
                            595823311506,
                            221.8411353369389
                        ],
                        [
                            608203281974,
                            221.88994343877124
                        ],
                        [
                            618603725216,
                            221.66017091514945
                        ],
                        [
                            650842209809,
                            220.78228426611778
                        ],
                        [
                            667098911089,
                            221.4749097613834
                        ],
                        [
                            675728355546,
                            220.96578427472173
                        ],
                        [
                            683127405222,
                            221.77678811370842
                        ],
                        [
                            686798504256,
                            222.14707880065893
                        ],
                        [
                            697669573141,
                            221.93267767423765
                        ],
                        [
                            700900916833,
                            222.35072057536243
                        ],
                        [
                            722418545260,
                            222.1987422426871
                        ],
                        [
                            724374208507,
                            222.43505756524735
                        ],
                        [
                            728741791907,
                            221.4127048219721
                        ],
                        [
                            733330100365,
                            222.02710498341222
                        ],
                        [
                            763286994105,
                            222.50878835393635
                        ],
                        [
                            765800017064,
                            221.41772877112354
                        ],
                        [
                            779023349937,
                            221.58925657025569
                        ],
                        [
                            786622252650,
                            222.63182795823863
                        ],
                        [
                            790257657189,
                            221.59847399857355
                        ],
                        [
                            799130205475,
                            221.2972591292487
                        ],
                        [
                            810763719948,
                            221.17652561570853
                        ],
                        [
                            828316391866,
                            221.90387002433928
                        ],
                        [
                            845777964316,
                            221.66559104312105
                        ],
                        [
                            849312104963,
                            222.10301886829552
                        ],
                        [
                            863145098610,
                            222.17583698159225
                        ],
                        [
                            877397400346,
                            222.261364963333
                        ],
                        [
                            885619110529,
                            221.78333343063878
                        ],
                        [
                            894245725002,
                            221.34541986128949
                        ],
                        [
                            918028808564,
                            221.12464452293452
                        ],
                        [
                            919178808859,
                            221.2925850422592
                        ],
                        [
                            921872157644,
                            221.60814359001503
                        ],
                        [
                            924064786516,
                            221.85210731679516
                        ],
                        [
                            931550324854,
                            220.99301827504476
                        ],
                        [
                            938457907134,
                            221.81329533358445
                        ],
                        [
                            940514804268,
                            222.09937493873545
                        ],
                        [
                            950423793941,
                            221.6448221426474
                        ],
                        [
                            958939106643,
                            221.1211897493185
                        ],
                        [
                            960027966729,
                            221.2478760272581
                        ],
                        [
                            977615471750,
                            221.828074297188
                        ],
                        [
                            986625189147,
                            221.24834120559532
                        ],
                        [
                            989068304328,
                            221.46110193371976
                        ],
                        [
                            990199542124,
                            221.55968089295655
                        ],
                        [
                            992637998289,
                            221.83169409983287
                        ],
                        [
                            993769888812,
                            221.9663712845614
                        ],
                        [
                            999499732624,
                            221.30095158098212
                        ],
                        [
                            1000634319507,
                            221.5168220245139
                        ],
                        [
                            1006027131105,
                            222.12153285517033
                        ],
                        [
                            1010507331306,
                            221.11675292283624
                        ],
                        [
                            1014347014646,
                            221.56154703746105
                        ],
                        [
                            1017429603440,
                            222.00589310394753
                        ]
                    ],
                    "n_avg_mb": 1.5169462444275383,
                    "n_copy_mb_s": 443.73470391292796,
                    "n_cpu_percent_c": 2.0316627221076806,
                    "n_cpu_percent_python": 16.963852853989923,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.677943229675293,
                    "n_malloc_mb": 1157.4056558609009,
                    "n_mallocs": 762,
                    "n_peak_mb": 1.677943229675293,
                    "n_python_fraction": 0.039480399584822315,
                    "n_sys_percent": 1.1909313035255513,
                    "n_usage_fraction": 0.7790818245650236
                },
                {
                    "line": "EmbeddingModel.update_grad",
                    "lineno": 14,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.3592440893042805,
                    "n_cpu_percent_python": 2.9374725239522674,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.20238396163859407,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.forward",
                    "lineno": 17,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.03897131686852268,
                    "n_cpu_percent_python": 0.3440204142549027,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.024201455890063922,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.backward",
                    "lineno": 23,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 1101.3771307124325,
                    "n_cpu_percent_c": 3.574158360712633,
                    "n_cpu_percent_python": 29.757283315923587,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 2.102401284957515,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.train",
                    "lineno": 56,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.05753094429044348,
                    "n_cpu_percent_python": 0.48612294714191395,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.03582733961631933,
                    "n_usage_fraction": 0.0
                }
            ],
            "leaks": {},
            "lines": [
                {
                    "line": "        self.mtx_embed =np.random.randn(len(self.vocabulary), self.embed_size).astype(np.float32) * 1e-6\n",
                    "lineno": 9,
                    "memory_samples": [
                        [
                            110069643626,
                            192.59496403060103
                        ],
                        [
                            110323532141,
                            219.39012913064911
                        ],
                        [
                            110323541277,
                            165.95087842605272
                        ]
                    ],
                    "n_avg_mb": 80.26943492889404,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.01359888512014548,
                    "n_cpu_percent_python": 0.0011928741958531508,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 80.26943492889404,
                    "n_malloc_mb": 80.26943492889404,
                    "n_mallocs": 1,
                    "n_peak_mb": 80.26943492889404,
                    "n_python_fraction": 0.0024237257854689597,
                    "n_sys_percent": 0.009592387423844693,
                    "n_usage_fraction": 0.05403158132546913
                },
                {
                    "line": "    def update_embed(self,learning_rate, grad, vec):\n",
                    "lineno": 11,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00993759349354476,
                    "n_cpu_percent_python": 0.08899835582066955,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00599310406386343,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        return (learning_rate * (grad/len(vec))/np.sqrt(self.mtx_grad[vec]))\n",
                    "lineno": 12,
                    "memory_samples": [
                        [
                            110638112657,
                            220.92567957734175
                        ]
                    ],
                    "n_avg_mb": 1.5169462444275383,
                    "n_copy_mb_s": 443.73470391292796,
                    "n_cpu_percent_c": 2.0217236823868148,
                    "n_cpu_percent_python": 16.874854498169253,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.677943229675293,
                    "n_malloc_mb": 1157.4056558609009,
                    "n_mallocs": 762,
                    "n_peak_mb": 1.677943229675293,
                    "n_python_fraction": 0.039480399584822315,
                    "n_sys_percent": 1.1849396456890084,
                    "n_usage_fraction": 0.7790818245650236
                },
                {
                    "line": "    def update_grad(self, grad, vec):\n",
                    "lineno": 14,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.005154417781597559,
                    "n_cpu_percent_python": 0.04421862552113819,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003323032589865946,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        return np.square(grad)/len(vec)    \n",
                    "lineno": 15,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.35409110533571886,
                    "n_cpu_percent_python": 2.8932538984311287,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.19905949523569264,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    def forward(self, anchor, truth, wrong):\n",
                    "lineno": 17,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.003462374953684669,
                    "n_cpu_percent_python": 0.02940055685740221,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0023055084702311088,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        title_vec = sgd.doc_to_vec(anchor, self.mtx_embed)\n",
                    "lineno": 18,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.01065005274501767,
                    "n_cpu_percent_python": 0.09985291227216221,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.007010959636615879,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        text_vec = sgd.doc_to_vec(truth, self.mtx_embed)\n",
                    "lineno": 19,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008011234082320037,
                    "n_cpu_percent_python": 0.06368964324813814,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004675160420606903,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        incor_text_vec = sgd.doc_to_vec(wrong, self.mtx_embed)\n",
                    "lineno": 20,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007858349705210875,
                    "n_cpu_percent_python": 0.06608269818784242,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004169298308514651,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        return title_vec,text_vec, incor_text_vec, sgd.calculate_loss(title_vec, text_vec, incor_text_vec)\n",
                    "lineno": 21,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008990119434377853,
                    "n_cpu_percent_python": 0.08499460368935768,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.006039715002007009,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    def backward(self, title_vec, text_vec, incor_text_vec, anchor, truth, wrong, learning_rate):\n",
                    "lineno": 23,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0025733614685027805,
                    "n_cpu_percent_python": 0.022426198874798724,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0024016086089305453,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        grad_anchor, grad_truth, grad_wrong = sgd.calculate_gradient(title_vec, text_vec, incor_text_vec)\n",
                    "lineno": 24,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.005715749906452458,
                    "n_cpu_percent_python": 0.05487774722591117,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0034587152603990055,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_grad[anchor] += self.update_grad(grad_anchor, anchor)\n",
                    "lineno": 26,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 67.74620551703185,
                    "n_cpu_percent_c": 0.4616391162654508,
                    "n_cpu_percent_python": 3.843966691616572,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.26920904697266096,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_grad[truth] += self.update_grad(grad_truth, truth)\n",
                    "lineno": 27,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 296.8807127628128,
                    "n_cpu_percent_c": 0.7675655564259755,
                    "n_cpu_percent_python": 6.330289861857501,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.4417485731331259,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_grad[wrong] += self.update_grad(grad_wrong, wrong)\n",
                    "lineno": 28,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 299.40931541030585,
                    "n_cpu_percent_c": 0.7546978061449073,
                    "n_cpu_percent_python": 6.209680362563333,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.43487691872434914,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_embed[anchor] -= self.update_embed(learning_rate, grad_anchor, anchor)\n",
                    "lineno": 31,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 43.45400446868754,
                    "n_cpu_percent_c": 0.3476015954785462,
                    "n_cpu_percent_python": 2.957282372555213,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.21015417295276403,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_embed[truth] -= self.update_embed(learning_rate, grad_truth, truth)\n",
                    "lineno": 32,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 194.79051227826804,
                    "n_cpu_percent_c": 0.617862508062777,
                    "n_cpu_percent_python": 5.149035201682953,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.36902492326043956,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_embed[wrong] -= self.update_embed(learning_rate, grad_wrong, wrong)\n",
                    "lineno": 33,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 199.09638027532645,
                    "n_cpu_percent_c": 0.6165224047275241,
                    "n_cpu_percent_python": 5.189724879547307,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.37150758827733876,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        self.mtx_grad = np.full_like(self.mtx_embed, 1e-8, dtype=np.float32)            \n",
                    "lineno": 57,
                    "memory_samples": [
                        [
                            110326293159,
                            219.29994119288597
                        ]
                    ],
                    "n_avg_mb": 53.35828685760498,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 53.35828685760498,
                    "n_malloc_mb": 53.35828685760498,
                    "n_mallocs": 1,
                    "n_peak_mb": 53.35828685760498,
                    "n_python_fraction": 0.000184,
                    "n_sys_percent": 0.0,
                    "n_usage_fraction": 0.03591694171372083
                },
                {
                    "line": "            for anchor, truth, wrong in zip(train_titles, train_texts, train_wrong_texts):\n",
                    "lineno": 62,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.012226393435865932,
                    "n_cpu_percent_python": 0.10992180507237534,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.010054696340682831,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                title_vec, text_vec, incor_text_vec, loss = self.forward(anchor, truth, wrong)\n",
                    "lineno": 63,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007145554981903667,
                    "n_cpu_percent_python": 0.06528896143352127,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.005014611784567298,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                self.backward(title_vec, text_vec, incor_text_vec, anchor, truth, wrong, learning_rate)\n",
                    "lineno": 64,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.038181315116554794,
                    "n_cpu_percent_python": 0.31091218063601744,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.02073571224718829,
                    "n_usage_fraction": 0.0
                }
            ],
            "percent_cpu_time": 60.13044898091575
        },
        "/Users/Iana_Kasimova/sgd/sgd.py": {
            "functions": [
                {
                    "line": "read_file",
                    "lineno": 13,
                    "memory_samples": [
                        [
                            4443537010,
                            80.41360891248858
                        ],
                        [
                            10152536853,
                            85.85032606359431
                        ],
                        [
                            18626249261,
                            90.4261649139429
                        ],
                        [
                            27263624940,
                            91.9829903052914
                        ],
                        [
                            53880713408,
                            100.90998379881647
                        ],
                        [
                            59591070564,
                            94.48729746326019
                        ],
                        [
                            62401161193,
                            88.10041355846141
                        ],
                        [
                            63951409633,
                            89.67050408340022
                        ],
                        [
                            65475129602,
                            91.24288222038385
                        ],
                        [
                            68391001099,
                            94.40457162786701
                        ],
                        [
                            70056195758,
                            95.99241593162402
                        ],
                        [
                            74547318976,
                            100.70250806415783
                        ],
                        [
                            77586225779,
                            103.84999486274141
                        ],
                        [
                            82041134810,
                            108.59029913776308
                        ],
                        [
                            85226299856,
                            111.73930786231722
                        ],
                        [
                            86762293003,
                            113.3064853697488
                        ],
                        [
                            88232048935,
                            114.88016538214919
                        ],
                        [
                            91049452889,
                            118.03270060719255
                        ],
                        [
                            94348492160,
                            121.17628823524518
                        ],
                        [
                            95974512387,
                            122.74240032792684
                        ],
                        [
                            99077729380,
                            125.89659879134854
                        ],
                        [
                            100546185595,
                            127.45938666186576
                        ],
                        [
                            101933264153,
                            129.03852920452766
                        ],
                        [
                            105023656128,
                            132.19432382203365
                        ],
                        [
                            106583214887,
                            133.76687883247877
                        ],
                        [
                            107936204387,
                            135.3511064547491
                        ],
                        [
                            109587737575,
                            136.90876436693847
                        ]
                    ],
                    "n_avg_mb": 1.4794727961222331,
                    "n_copy_mb_s": 0.03291209689754012,
                    "n_cpu_percent_c": 0.015421877096531703,
                    "n_cpu_percent_python": 0.14492108857664415,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.4846153259277344,
                    "n_malloc_mb": 39.94576549530029,
                    "n_mallocs": 27,
                    "n_peak_mb": 1.4846153259277344,
                    "n_python_fraction": 0.9999555983016447,
                    "n_sys_percent": 0.0060987313597289814,
                    "n_usage_fraction": 0.026888601855480563
                },
                {
                    "line": "build_vocab",
                    "lineno": 20,
                    "memory_samples": [
                        [
                            4884673458,
                            82.32578252254517
                        ],
                        [
                            32330301356,
                            100.16967727734117
                        ],
                        [
                            32330304543,
                            97.6706266505599
                        ],
                        [
                            6453019978,
                            84.26574488232342
                        ],
                        [
                            11859023518,
                            88.83873651092524
                        ],
                        [
                            32330284938,
                            97.76440570549693
                        ],
                        [
                            32330291164,
                            95.29454273681773
                        ],
                        [
                            42734872881,
                            99.34787423827919
                        ],
                        [
                            57792893441,
                            99.51713386097875
                        ],
                        [
                            57792902069,
                            98.04739791646921
                        ],
                        [
                            57792906853,
                            96.56380785812323
                        ],
                        [
                            57792909926,
                            91.03915406036103
                        ],
                        [
                            57792919311,
                            92.92773950906755
                        ]
                    ],
                    "n_avg_mb": 2.9167082650320872,
                    "n_copy_mb_s": 0.03990327544536552,
                    "n_cpu_percent_c": 0.039782424578865286,
                    "n_cpu_percent_python": 0.37434120593588033,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 5.676607131958008,
                    "n_malloc_mb": 20.41695785522461,
                    "n_mallocs": 7,
                    "n_peak_mb": 5.676607131958008,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.015523438285842177,
                    "n_usage_fraction": 0.013743220190231427
                },
                {
                    "line": "tokenize_text",
                    "lineno": 41,
                    "memory_samples": [
                        [
                            61008194570,
                            96.0700406163276
                        ],
                        [
                            66945369648,
                            92.83471517979224
                        ],
                        [
                            76115257011,
                            102.28166593293203
                        ],
                        [
                            89537162666,
                            116.46444713476427
                        ],
                        [
                            92444814364,
                            119.60385207787532
                        ],
                        [
                            97567989128,
                            124.31486070415576
                        ],
                        [
                            71544177233,
                            97.56749650212588
                        ],
                        [
                            73000539759,
                            99.12071637693093
                        ],
                        [
                            80634395113,
                            107.02631194894873
                        ],
                        [
                            83639345839,
                            110.1633788561145
                        ],
                        [
                            103451402034,
                            130.60489437910388
                        ],
                        [
                            79172997632,
                            105.44126810586447
                        ]
                    ],
                    "n_avg_mb": 1.4815342426300049,
                    "n_copy_mb_s": 0.050637861280326275,
                    "n_cpu_percent_c": 0.044212137315486996,
                    "n_cpu_percent_python": 0.2517705924841859,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.506875991821289,
                    "n_malloc_mb": 17.77841091156006,
                    "n_mallocs": 12,
                    "n_peak_mb": 1.506875991821289,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.01379382355728632,
                    "n_usage_fraction": 0.011967141114877664
                },
                {
                    "line": "remove_punctuations",
                    "lineno": 60,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.06178467038535838,
                    "n_cpu_percent_c": 0.029026207323402192,
                    "n_cpu_percent_python": 0.30764245187687506,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.013028550002262107,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "remove_html",
                    "lineno": 66,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00943876710090998,
                    "n_cpu_percent_python": 0.0989121975304745,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004739141205367956,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "remove_url",
                    "lineno": 72,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.01249484169826381,
                    "n_cpu_percent_python": 0.13136547886385636,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.005806988608194155,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "remove_emoji",
                    "lineno": 78,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.05945888873925912,
                    "n_cpu_percent_python": 0.5593044426550009,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.024096308781093763,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "remove_abb",
                    "lineno": 93,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.7246079067910376,
                    "n_cpu_percent_python": 6.937067097320504,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.30576367968571655,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "clean_text",
                    "lineno": 188,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.004694638634621624,
                    "n_cpu_percent_python": 0.04286297371680401,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0015334734998818291,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.calculate_loss",
                    "lineno": 201,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.38230190413898074,
                    "n_cpu_percent_c": 0.2853244754133383,
                    "n_cpu_percent_python": 2.4068972816642664,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.17600339750197333,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.calculate_gradient",
                    "lineno": 205,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0756798617896545,
                    "n_cpu_percent_python": 0.6595469395327438,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.045156547586584495,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.doc_to_vec",
                    "lineno": 209,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 219.80834673549649,
                    "n_cpu_percent_c": 2.5654649838524772,
                    "n_cpu_percent_python": 21.47514974076327,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 1.5183151381001632,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "EmbeddingModel.shuffle_text",
                    "lineno": 220,
                    "memory_samples": [
                        [
                            203966411964,
                            222.4215017432454
                        ],
                        [
                            235455601774,
                            221.5206421222816
                        ],
                        [
                            299204596054,
                            222.6977425434379
                        ],
                        [
                            329256106299,
                            221.81465725794902
                        ],
                        [
                            358772704168,
                            222.59807047915874
                        ],
                        [
                            421726706114,
                            221.88467095573017
                        ],
                        [
                            481637475833,
                            222.67758168459108
                        ],
                        [
                            511675313754,
                            223.19274873408395
                        ],
                        [
                            541198669707,
                            222.37351466238943
                        ],
                        [
                            572164913710,
                            222.20439110763016
                        ],
                        [
                            604563115438,
                            221.4416347918382
                        ],
                        [
                            634601436346,
                            222.0378041964884
                        ],
                        [
                            665537599901,
                            222.8311289127413
                        ],
                        [
                            696352355255,
                            221.81782997451776
                        ],
                        [
                            724911838320,
                            222.58588459797215
                        ],
                        [
                            756891523571,
                            223.21340980245662
                        ],
                        [
                            841984903625,
                            222.75770279769887
                        ],
                        [
                            964068175791,
                            221.88909648607665
                        ],
                        [
                            996256417246,
                            222.55085531969257
                        ]
                    ],
                    "n_avg_mb": 1.7553803795262386,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0015976066246969228,
                    "n_cpu_percent_python": 0.00827918444302004,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.1780881881713867,
                    "n_malloc_mb": 33.352227210998535,
                    "n_mallocs": 19,
                    "n_peak_mb": 2.1780881881713867,
                    "n_python_fraction": 0.04063727079979909,
                    "n_sys_percent": 0.0006797878430140056,
                    "n_usage_fraction": 0.022450308495792236
                }
            ],
            "leaks": {},
            "lines": [
                {
                    "line": "from nltk import word_tokenize\n",
                    "lineno": 2,
                    "memory_samples": [
                        [
                            2143219854,
                            25.48618695315916
                        ],
                        [
                            3148687640,
                            47.87752192096806
                        ]
                    ],
                    "n_avg_mb": 35.67523765563965,
                    "n_copy_mb_s": 0.02609329528372205,
                    "n_cpu_percent_c": 0.024029228021429677,
                    "n_cpu_percent_python": 0.08395229030047464,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 35.67523765563965,
                    "n_malloc_mb": 35.67523765563965,
                    "n_mallocs": 1,
                    "n_peak_mb": 35.67523765563965,
                    "n_python_fraction": 0.9866863319869352,
                    "n_sys_percent": 0.05515792327594708,
                    "n_usage_fraction": 0.02401399120853
                },
                {
                    "line": "import pandas as pd\n",
                    "lineno": 4,
                    "memory_samples": [
                        [
                            3684758507,
                            61.26238958938281
                        ]
                    ],
                    "n_avg_mb": 20.073654174804688,
                    "n_copy_mb_s": 0.012332944790916447,
                    "n_cpu_percent_c": 0.009171334024615655,
                    "n_cpu_percent_python": 0.032104579198267744,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 20.073654174804688,
                    "n_malloc_mb": 21.56636333465576,
                    "n_mallocs": 1,
                    "n_peak_mb": 20.073654174804688,
                    "n_python_fraction": 0.9747932111560151,
                    "n_sys_percent": 0.023193284380931694,
                    "n_usage_fraction": 0.014516916874315956
                },
                {
                    "line": "        for record in csv.reader(csvfile, delimiter=\",\"):\n",
                    "lineno": 17,
                    "memory_samples": [
                        [
                            4443537010,
                            80.42415647684608
                        ],
                        [
                            77586225779,
                            103.85113426306526
                        ],
                        [
                            100546185595,
                            127.47963277737283
                        ]
                    ],
                    "n_avg_mb": 1.4794727961222331,
                    "n_copy_mb_s": 0.03291209689754012,
                    "n_cpu_percent_c": 0.014493933899588059,
                    "n_cpu_percent_python": 0.13259476625736005,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.4846153259277344,
                    "n_malloc_mb": 39.94576549530029,
                    "n_mallocs": 27,
                    "n_peak_mb": 1.4846153259277344,
                    "n_python_fraction": 0.9999555983016447,
                    "n_sys_percent": 0.005609298036473358,
                    "n_usage_fraction": 0.026888601855480563
                },
                {
                    "line": "            yield record[number_title], record[number_text]\n",
                    "lineno": 18,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0009275083455971945,
                    "n_cpu_percent_python": 0.012326322319284148,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.000489868174602095,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    for title, text in read_file(path_to_file): \n",
                    "lineno": 25,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00018713447888088578,
                    "n_cpu_percent_python": 0.0009338047848342872,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 5.932257879055067e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        title = clean_text(title).split()\n",
                    "lineno": 26,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.002315470528172715,
                    "n_cpu_percent_python": 0.017150927742527633,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0006209621662986821,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        text = clean_text(text).split()\n",
                    "lineno": 27,
                    "memory_samples": [
                        [
                            42734872881,
                            99.33409674717385
                        ]
                    ],
                    "n_avg_mb": 1.4776086807250977,
                    "n_copy_mb_s": 0.02355383270886761,
                    "n_cpu_percent_c": 0.0021670447141531974,
                    "n_cpu_percent_python": 0.020714744171791352,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.4776086807250977,
                    "n_malloc_mb": 1.4776086807250977,
                    "n_mallocs": 1,
                    "n_peak_mb": 1.4776086807250977,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.001012024147752553,
                    "n_usage_fraction": 0.0009946193550576334
                },
                {
                    "line": "        line = title + text \n",
                    "lineno": 28,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 3.695139616827343e-05,
                    "n_cpu_percent_python": 0.0009284270394030357,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 5.697766559279379e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        for word_item in line:\n",
                    "lineno": 29,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0009391375463498745,
                    "n_cpu_percent_python": 0.011442431268342212,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0003854938300531008,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                idx = vocabulary.get(word_item)\n",
                    "lineno": 31,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.02155314726723026,
                    "n_cpu_percent_python": 0.2009396521759195,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00830866238527401,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                feature_counter[idx] += 1\n",
                    "lineno": 32,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.011444112552128745,
                    "n_cpu_percent_python": 0.10895455319479534,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00454852911308233,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                feature_idx = len(vocabulary)\n",
                    "lineno": 34,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0006177673124165347,
                    "n_cpu_percent_python": 0.009603098280992988,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0002438802149380445,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                vocabulary[word_item] = feature_idx\n",
                    "lineno": 35,
                    "memory_samples": [
                        [
                            6453019978,
                            84.27631482095792
                        ]
                    ],
                    "n_avg_mb": 3.4870449701944985,
                    "n_copy_mb_s": 0.016349442736497907,
                    "n_cpu_percent_c": 0.0003495108128488472,
                    "n_cpu_percent_python": 0.001786865096362962,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 5.676607131958008,
                    "n_malloc_mb": 10.461134910583496,
                    "n_mallocs": 3,
                    "n_peak_mb": 5.676607131958008,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.00021470882737581226,
                    "n_usage_fraction": 0.007041679839637613
                },
                {
                    "line": "                feature_counter[feature_idx] = 1 \n",
                    "lineno": 36,
                    "memory_samples": [
                        [
                            4884673458,
                            82.30214237529225
                        ]
                    ],
                    "n_avg_mb": 3.2978458404541016,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 4.903223991394043,
                    "n_malloc_mb": 6.595691680908203,
                    "n_mallocs": 2,
                    "n_peak_mb": 4.903223991394043,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.0,
                    "n_usage_fraction": 0.004439742870625711
                },
                {
                    "line": "    vocabulary = [token for token, idx in vocabulary.items() if feature_counter[idx] > frequency]\n",
                    "lineno": 37,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0009338594181630292,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 4.936437599360525e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    vocabulary = {token: idx for idx, token in enumerate(vocabulary)}\n",
                    "lineno": 38,
                    "memory_samples": [
                        [
                            57792893441,
                            99.53117631227487
                        ]
                    ],
                    "n_avg_mb": 1.8825225830078125,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0001601728684182181,
                    "n_cpu_percent_python": 0.0009528427627479957,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.8825225830078125,
                    "n_malloc_mb": 1.8825225830078125,
                    "n_mallocs": 1,
                    "n_peak_mb": 1.8825225830078125,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 3.5488082788439817e-05,
                    "n_usage_fraction": 0.0012671781249104688
                },
                {
                    "line": "    for title, text in read_file(path_to_file): \n",
                    "lineno": 44,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0001465852445331405,
                    "n_cpu_percent_python": 0.0008735711831516259,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00012805231913168627,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        title = clean_text(title).split()\n",
                    "lineno": 45,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.003017606567068227,
                    "n_cpu_percent_python": 0.02926049533285607,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.001345202188849274,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "        text = clean_text(text).split()\n",
                    "lineno": 46,
                    "memory_samples": [
                        [
                            71544177233,
                            97.54957736743832
                        ],
                        [
                            103451402034,
                            130.61676778834538
                        ]
                    ],
                    "n_avg_mb": 1.4776025772094727,
                    "n_copy_mb_s": 0.050637861280326275,
                    "n_cpu_percent_c": 0.004209190841276256,
                    "n_cpu_percent_python": 0.039525569641073593,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.4776334762573242,
                    "n_malloc_mb": 7.388012886047363,
                    "n_mallocs": 5,
                    "n_peak_mb": 1.4776334762573242,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.001958303936352516,
                    "n_usage_fraction": 0.004973076233060534
                },
                {
                    "line": "        titles.append([vocabulary.get(item, 0) for item in title])\n",
                    "lineno": 47,
                    "memory_samples": [
                        [
                            79172997632,
                            105.4507914361545
                        ]
                    ],
                    "n_avg_mb": 1.506875991821289,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.02292474071960518,
                    "n_cpu_percent_python": 0.046888380858226816,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.506875991821289,
                    "n_malloc_mb": 1.506875991821289,
                    "n_mallocs": 1,
                    "n_peak_mb": 1.506875991821289,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.004847977231451616,
                    "n_usage_fraction": 0.0010143199933027203
                },
                {
                    "line": "        texts.append([vocabulary.get(item, 0) for item in text])\n",
                    "lineno": 48,
                    "memory_samples": [
                        [
                            61008194570,
                            96.0646012195375
                        ],
                        [
                            92444814364,
                            119.60213654132113
                        ]
                    ],
                    "n_avg_mb": 1.4805870056152344,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.013512423177766296,
                    "n_cpu_percent_python": 0.13522257546887775,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 1.4954557418823242,
                    "n_malloc_mb": 8.883522033691406,
                    "n_mallocs": 6,
                    "n_peak_mb": 1.4954557418823242,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.005915878646739117,
                    "n_usage_fraction": 0.00597974488851441
                },
                {
                    "line": "    punct_tag=re.compile(r'[^\\w\\s]')\n",
                    "lineno": 61,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.004703844129385406,
                    "n_cpu_percent_python": 0.05583253940772676,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0023611308317392963,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data=punct_tag.sub(r'',data)\n",
                    "lineno": 62,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.06178467038535838,
                    "n_cpu_percent_c": 0.024322565575383967,
                    "n_cpu_percent_python": 0.25180991246914836,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.010667216789155587,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def remove_html(data):\n",
                    "lineno": 66,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00042148729982721,
                    "n_cpu_percent_python": 0.004621571270032574,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0003214104510590671,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    html_tag=re.compile(r'<.*?>')\n",
                    "lineno": 67,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0062757320060083215,
                    "n_cpu_percent_python": 0.06299047884753209,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0031729988257008838,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data=html_tag.sub(r'',data)\n",
                    "lineno": 68,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0027397113879470167,
                    "n_cpu_percent_python": 0.03130014741290987,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0012465683357354262,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def remove_url(data):\n",
                    "lineno": 72,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 9.627965901458279e-05,
                    "n_cpu_percent_python": 0.0028262130826293822,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00012766411258840688,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    url_clean= re.compile(r\"https://\\S+|www\\.\\S+\")\n",
                    "lineno": 73,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.004732105859022902,
                    "n_cpu_percent_python": 0.049139209335637195,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002179913573104759,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data=url_clean.sub(r'',data)\n",
                    "lineno": 74,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007667020688585492,
                    "n_cpu_percent_python": 0.0794000564455898,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003498846414141791,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def remove_emoji(data):\n",
                    "lineno": 78,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0002195551649295255,
                    "n_cpu_percent_python": 0.0018894592506847447,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 8.593438246095706e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    emoji_clean= re.compile(\"[\"\n",
                    "lineno": 79,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009625763679304894,
                    "n_cpu_percent_python": 0.08760885313074994,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004251875097584574,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "                           \"]+\", flags=re.UNICODE)\n",
                    "lineno": 86,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0001986646950067098,
                    "n_cpu_percent_python": 0.0028543778018182597,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00010192601386500276,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data=emoji_clean.sub(r'',data)\n",
                    "lineno": 87,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.029867588660371674,
                    "n_cpu_percent_python": 0.2841834765765499,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.011917020917447667,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    url_clean= re.compile(r\"https://\\S+|www\\.\\S+\")\n",
                    "lineno": 88,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007073156108438836,
                    "n_cpu_percent_python": 0.06357850482517094,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0025530867917624303,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data=url_clean.sub(r'',data)\n",
                    "lineno": 89,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.012472736567195166,
                    "n_cpu_percent_python": 0.11918977107002714,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.005187889441985415,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def remove_abb(data):\n",
                    "lineno": 93,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00015261469370787242,
                    "n_cpu_percent_python": 0.001881808800334629,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 9.15029936837404e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"he's\", \"he is\", data)\n",
                    "lineno": 94,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.010506633116857404,
                    "n_cpu_percent_python": 0.09649180453788056,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00421046609665943,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"there's\", \"there is\", data)\n",
                    "lineno": 95,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008518152764301129,
                    "n_cpu_percent_python": 0.08360351136596411,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00321771261630795,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"We're\", \"We are\", data)\n",
                    "lineno": 96,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.01024770815790497,
                    "n_cpu_percent_python": 0.09511901371601263,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004637634407262786,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"That's\", \"That is\", data)\n",
                    "lineno": 97,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.005923719991016983,
                    "n_cpu_percent_python": 0.06605923107346492,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030145086047823045,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"won't\", \"will not\", data)\n",
                    "lineno": 98,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008060770908848356,
                    "n_cpu_percent_python": 0.08058021701446326,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003293288179334743,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"they're\", \"they are\", data)\n",
                    "lineno": 99,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007701757249389604,
                    "n_cpu_percent_python": 0.07272491363088063,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032992596992406967,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Can't\", \"Cannot\", data)\n",
                    "lineno": 100,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006849745701268325,
                    "n_cpu_percent_python": 0.07608219428220947,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0038793468620933105,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"wasn't\", \"was not\", data)\n",
                    "lineno": 101,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006636099732938168,
                    "n_cpu_percent_python": 0.0685350824446828,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0024755740050019775,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"don\\x89\u00db\u00aat\", \"do not\", data)\n",
                    "lineno": 102,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007098092543824596,
                    "n_cpu_percent_python": 0.07514489175246365,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003844846481547621,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data= re.sub(r\"aren't\", \"are not\", data)\n",
                    "lineno": 103,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007856428583318364,
                    "n_cpu_percent_python": 0.08344889079309988,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003364285321577043,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"isn't\", \"is not\", data)\n",
                    "lineno": 104,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0077191440173470394,
                    "n_cpu_percent_python": 0.07253683617920219,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0035088860452067556,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"What's\", \"What is\", data)\n",
                    "lineno": 105,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00799448949394956,
                    "n_cpu_percent_python": 0.06711624009057476,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030133817501649847,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"haven't\", \"have not\", data)\n",
                    "lineno": 106,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007255112208656463,
                    "n_cpu_percent_python": 0.0738424176986686,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0031289599057870723,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"hasn't\", \"has not\", data)\n",
                    "lineno": 107,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008764644930829091,
                    "n_cpu_percent_python": 0.08339338659213795,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003459302590207941,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"There's\", \"There is\", data)\n",
                    "lineno": 108,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006282083512531237,
                    "n_cpu_percent_python": 0.059233007257185236,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0029975163651861634,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"He's\", \"He is\", data)\n",
                    "lineno": 109,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.010674516462138435,
                    "n_cpu_percent_python": 0.09734176145197028,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004361285639026465,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"It's\", \"It is\", data)\n",
                    "lineno": 110,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007635491526920706,
                    "n_cpu_percent_python": 0.06652118371137924,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0025689968939580717,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"You're\", \"You are\", data)\n",
                    "lineno": 111,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009867240281158611,
                    "n_cpu_percent_python": 0.08909985556338791,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0036912021809638713,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I'M\", \"I am\", data)\n",
                    "lineno": 112,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006585857582363853,
                    "n_cpu_percent_python": 0.06518593257732623,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002924901350943211,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"shouldn't\", \"should not\", data)\n",
                    "lineno": 113,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008090252987843051,
                    "n_cpu_percent_python": 0.06744885772260582,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0026431091504631253,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"wouldn't\", \"would not\", data)\n",
                    "lineno": 114,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009736124517408209,
                    "n_cpu_percent_python": 0.08541126077730939,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003429845728393211,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i'm\", \"I am\", data)\n",
                    "lineno": 115,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00763283642127574,
                    "n_cpu_percent_python": 0.07568879390423747,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003268529488758678,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I\\x89\u00db\u00aam\", \"I am\", data)\n",
                    "lineno": 116,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007556489565534191,
                    "n_cpu_percent_python": 0.08178945348132813,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003023507907080411,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I'm\", \"I am\", data)\n",
                    "lineno": 117,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006941655883813882,
                    "n_cpu_percent_python": 0.07005366855349483,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0029729214456948472,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Isn't\", \"is not\", data)\n",
                    "lineno": 118,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0073049139903752286,
                    "n_cpu_percent_python": 0.068111086157375,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0029685671700016565,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Here's\", \"Here is\", data)\n",
                    "lineno": 119,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00850269184539665,
                    "n_cpu_percent_python": 0.07724171632910228,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00266353579041081,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you've\", \"you have\", data)\n",
                    "lineno": 120,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00717301445289993,
                    "n_cpu_percent_python": 0.07164454325664066,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004470543314421641,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you\\x89\u00db\u00aave\", \"you have\", data)\n",
                    "lineno": 121,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008176729294633344,
                    "n_cpu_percent_python": 0.08153974018304111,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003320098820602014,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"we're\", \"we are\", data)\n",
                    "lineno": 122,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00936142625257171,
                    "n_cpu_percent_python": 0.07964911729359583,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032874270379370757,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"what's\", \"what is\", data)\n",
                    "lineno": 123,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006429402425960472,
                    "n_cpu_percent_python": 0.07081047636446165,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0031974631647778513,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"couldn't\", \"could not\", data)\n",
                    "lineno": 124,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009944899154159593,
                    "n_cpu_percent_python": 0.09695107559394583,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003680126169372797,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"we've\", \"we have\", data)\n",
                    "lineno": 125,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007493708061912265,
                    "n_cpu_percent_python": 0.07490484309170431,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030469395194963394,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"it\\x89\u00db\u00aas\", \"it is\", data)\n",
                    "lineno": 126,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009158154945802742,
                    "n_cpu_percent_python": 0.08805098884093471,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0037412945083292997,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"doesn\\x89\u00db\u00aat\", \"does not\", data)\n",
                    "lineno": 127,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009678384785474732,
                    "n_cpu_percent_python": 0.08704859762670368,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003786904518279511,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"It\\x89\u00db\u00aas\", \"It is\", data)\n",
                    "lineno": 128,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008124498222009353,
                    "n_cpu_percent_python": 0.07438809479835891,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0036455382587420584,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Here\\x89\u00db\u00aas\", \"Here is\", data)\n",
                    "lineno": 129,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008674846299014476,
                    "n_cpu_percent_python": 0.07722946100941018,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003776223213255546,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"who's\", \"who is\", data)\n",
                    "lineno": 130,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006667256794647069,
                    "n_cpu_percent_python": 0.06753647198392466,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0035770408071926813,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I\\x89\u00db\u00aave\", \"I have\", data)\n",
                    "lineno": 131,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007252230270526583,
                    "n_cpu_percent_python": 0.071398712441024,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0036641600457292503,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"y'all\", \"you all\", data)\n",
                    "lineno": 132,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007382424573108716,
                    "n_cpu_percent_python": 0.077442312808763,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0034853758155165638,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"can\\x89\u00db\u00aat\", \"cannot\", data)\n",
                    "lineno": 133,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007814108880283215,
                    "n_cpu_percent_python": 0.07589921571851169,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003042705069551798,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"would've\", \"would have\", data)\n",
                    "lineno": 134,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00900396160058926,
                    "n_cpu_percent_python": 0.09071906399566318,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004034713275882822,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"it'll\", \"it will\", data)\n",
                    "lineno": 135,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0076966355366600405,
                    "n_cpu_percent_python": 0.07013829733914945,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0029077983898512425,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"we'll\", \"we will\", data)\n",
                    "lineno": 136,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0062164589788329914,
                    "n_cpu_percent_python": 0.06627960650050668,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0027848576097790046,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"wouldn\\x89\u00db\u00aat\", \"would not\", data)\n",
                    "lineno": 137,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009157044152359838,
                    "n_cpu_percent_python": 0.08062865830534187,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003279870942502961,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"We've\", \"We have\", data)\n",
                    "lineno": 138,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008264972495667055,
                    "n_cpu_percent_python": 0.07504888761708674,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0029149649571661726,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"he'll\", \"he will\", data)\n",
                    "lineno": 139,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008488660969779958,
                    "n_cpu_percent_python": 0.08139150696262801,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0034959075420059682,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Y'all\", \"You all\", data)\n",
                    "lineno": 140,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007168427639154264,
                    "n_cpu_percent_python": 0.07101109124649477,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003006351344041116,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Weren't\", \"Were not\", data)\n",
                    "lineno": 141,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007651042839241301,
                    "n_cpu_percent_python": 0.07028018496820414,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002748183845871458,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Didn't\", \"Did not\", data)\n",
                    "lineno": 142,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.005825858509396356,
                    "n_cpu_percent_python": 0.06900324033972464,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003006141334840497,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"they'll\", \"they will\", data)\n",
                    "lineno": 143,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008304995151913696,
                    "n_cpu_percent_python": 0.08828307145701215,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004529421408764117,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"they'd\", \"they would\", data)\n",
                    "lineno": 144,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007457006260977329,
                    "n_cpu_percent_python": 0.06338899990940827,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002779561338885061,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"DON'T\", \"DO NOT\", data)\n",
                    "lineno": 145,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009563426979262754,
                    "n_cpu_percent_python": 0.08317502857972939,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0037336933208239006,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"That\\x89\u00db\u00aas\", \"That is\", data)\n",
                    "lineno": 146,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008892496790141586,
                    "n_cpu_percent_python": 0.07509430747424052,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0028859340683229724,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"they've\", \"they have\", data)\n",
                    "lineno": 147,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006742355966616025,
                    "n_cpu_percent_python": 0.06920390112246048,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0028219641531559174,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i'd\", \"I would\", data)\n",
                    "lineno": 148,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006287475228267897,
                    "n_cpu_percent_python": 0.06447734127226212,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0036932465952617694,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"should've\", \"should have\", data)\n",
                    "lineno": 149,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009116323694601271,
                    "n_cpu_percent_python": 0.07449055376112329,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003573806569317509,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"You\\x89\u00db\u00aare\", \"You are\", data)\n",
                    "lineno": 150,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007796747484200498,
                    "n_cpu_percent_python": 0.07035488602571639,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0026700506264108427,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"where's\", \"where is\", data)\n",
                    "lineno": 151,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007373960448262531,
                    "n_cpu_percent_python": 0.06446598319426652,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0026669856758344407,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Don\\x89\u00db\u00aat\", \"Do not\", data)\n",
                    "lineno": 152,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006316465205282293,
                    "n_cpu_percent_python": 0.06531826139591576,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002768275962123374,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"we'd\", \"we would\", data)\n",
                    "lineno": 153,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0070898068329716775,
                    "n_cpu_percent_python": 0.0719239307098391,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030771901893975606,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i'll\", \"I will\", data)\n",
                    "lineno": 154,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008142041893775959,
                    "n_cpu_percent_python": 0.08286298823292172,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004020403262398092,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"weren't\", \"were not\", data)\n",
                    "lineno": 155,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007285952367262379,
                    "n_cpu_percent_python": 0.07859711291553625,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032895318268145023,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"They're\", \"They are\", data)\n",
                    "lineno": 156,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009407565110232241,
                    "n_cpu_percent_python": 0.0912018430276866,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0035164497227609796,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Can\\x89\u00db\u00aat\", \"Cannot\", data)\n",
                    "lineno": 157,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006368077957739701,
                    "n_cpu_percent_python": 0.06324654953582527,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0028941944303084153,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you\\x89\u00db\u00aall\", \"you will\", data)\n",
                    "lineno": 158,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009852573516036259,
                    "n_cpu_percent_python": 0.09286745386423599,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003858580557300817,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I\\x89\u00db\u00aad\", \"I would\", data)\n",
                    "lineno": 159,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007483457160968783,
                    "n_cpu_percent_python": 0.07101491599470526,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030142223408125943,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"let's\", \"let us\", data)\n",
                    "lineno": 160,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008352542503167925,
                    "n_cpu_percent_python": 0.08683835496069502,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0050440488761963895,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"it's\", \"it is\", data)\n",
                    "lineno": 161,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006791447891609275,
                    "n_cpu_percent_python": 0.0717742327203969,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032299850148182602,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"can't\", \"cannot\", data)\n",
                    "lineno": 162,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00758435172964823,
                    "n_cpu_percent_python": 0.07883941506909523,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00303445682308163,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"don't\", \"do not\", data)\n",
                    "lineno": 163,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007879547910750927,
                    "n_cpu_percent_python": 0.07707538216414604,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003911786112356294,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you're\", \"you are\", data)\n",
                    "lineno": 164,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008268344145703054,
                    "n_cpu_percent_python": 0.08069548446328818,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003173483207152932,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i've\", \"I have\", data)\n",
                    "lineno": 165,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008086657070447673,
                    "n_cpu_percent_python": 0.07532018088457408,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00369607306790133,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"that's\", \"that is\", data)\n",
                    "lineno": 166,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006572518345544381,
                    "n_cpu_percent_python": 0.07111986205879808,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002864226597085499,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i'll\", \"I will\", data)\n",
                    "lineno": 167,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.011303338423143168,
                    "n_cpu_percent_python": 0.09605116210077823,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004736354970836378,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"doesn't\", \"does not\",data)\n",
                    "lineno": 168,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007243964712659562,
                    "n_cpu_percent_python": 0.06766942893213383,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002368488187817316,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"i'd\", \"I would\", data)\n",
                    "lineno": 169,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009927319425599603,
                    "n_cpu_percent_python": 0.08424293031756352,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0036486207675219796,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"didn't\", \"did not\", data)\n",
                    "lineno": 170,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007394418606131343,
                    "n_cpu_percent_python": 0.06997812835432031,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030742339431669807,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"ain't\", \"am not\", data)\n",
                    "lineno": 171,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00709711016518883,
                    "n_cpu_percent_python": 0.06914768662777016,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002897344458197041,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you'll\", \"you will\", data)\n",
                    "lineno": 172,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009487769355825626,
                    "n_cpu_percent_python": 0.08350092683071188,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0044611704341940275,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I've\", \"I have\", data)\n",
                    "lineno": 173,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009269778457979744,
                    "n_cpu_percent_python": 0.07856065308085021,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0034064439266194737,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Don't\", \"do not\", data)\n",
                    "lineno": 174,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006740553778492856,
                    "n_cpu_percent_python": 0.06519459079283564,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002921615772991512,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I'll\", \"I will\", data)\n",
                    "lineno": 175,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009290037496915352,
                    "n_cpu_percent_python": 0.09082835316258159,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003925368014369266,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"I'd\", \"I would\", data)\n",
                    "lineno": 176,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007086618950547361,
                    "n_cpu_percent_python": 0.06736961176792593,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002695865573308199,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Let's\", \"Let us\", data)\n",
                    "lineno": 177,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006164730314886638,
                    "n_cpu_percent_python": 0.06295047187258383,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032120183016212073,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"you'd\", \"You would\", data)\n",
                    "lineno": 178,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008220842815913221,
                    "n_cpu_percent_python": 0.07378467748015216,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0032306420312699573,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"It's\", \"It is\", data)\n",
                    "lineno": 179,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0073297737121805154,
                    "n_cpu_percent_python": 0.06957501024047894,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.004605746773864249,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Ain't\", \"am not\", data)\n",
                    "lineno": 180,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007136108706670612,
                    "n_cpu_percent_python": 0.06998503005672718,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0030563371430103793,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Haven't\", \"Have not\", data)\n",
                    "lineno": 181,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008502211225512453,
                    "n_cpu_percent_python": 0.07960162092542344,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0033084504393965882,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"Could've\", \"Could have\", data)\n",
                    "lineno": 182,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.007992508879873858,
                    "n_cpu_percent_python": 0.07773430847093958,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003187191900948651,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"youve\", \"you have\", data)  \n",
                    "lineno": 183,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.009649484467868551,
                    "n_cpu_percent_python": 0.08883604363976219,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.003976616770952236,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    data = re.sub(r\"don\u00e5\u00abt\", \"do not\", data)\n",
                    "lineno": 184,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.006899695428117402,
                    "n_cpu_percent_python": 0.06174521612853227,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0024061827700033243,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def clean_text(text):\n",
                    "lineno": 188,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00040457135016157037,
                    "n_cpu_percent_python": 0.0028285109542899593,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0001384904080905993,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_abb(text)\n",
                    "lineno": 190,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0007099925934872895,
                    "n_cpu_percent_python": 0.005664834522512981,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00026389994214427964,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_punctuations(text)\n",
                    "lineno": 191,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0001608267587907349,
                    "n_cpu_percent_python": 0.0028908344899366257,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 6.211018498789093e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_punctuations(text)\n",
                    "lineno": 192,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.000468468637874748,
                    "n_cpu_percent_python": 0.004713912637098495,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0002223015991262551,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_emoji(text)\n",
                    "lineno": 193,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.000712971386985879,
                    "n_cpu_percent_python": 0.00575363594070398,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0001637623282057241,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_emoji(text)\n",
                    "lineno": 194,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0004021075124553052,
                    "n_cpu_percent_python": 0.00476656605566738,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0001621691990349341,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_html(text)\n",
                    "lineno": 195,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0005521444106833997,
                    "n_cpu_percent_python": 0.0038470260280919835,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 9.819351807800965e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_html(text)\n",
                    "lineno": 196,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0006408816927297578,
                    "n_cpu_percent_python": 0.005724713646532949,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00019417884821251797,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_url(text)\n",
                    "lineno": 197,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00024949735322460663,
                    "n_cpu_percent_python": 0.003851753812823621,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 8.639729564322822e-05,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    text = remove_url(text)\n",
                    "lineno": 198,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0003889474587379473,
                    "n_cpu_percent_python": 0.0028211856291460286,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00014619965584877821,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def calculate_loss(anchor, truth, wrong):\n",
                    "lineno": 201,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.005426172006214,
                    "n_cpu_percent_python": 0.03802958158227085,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.002608281167714438,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    return max(0, 1 - np.dot(anchor, truth) + np.dot(anchor, wrong))  \n",
                    "lineno": 202,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.38230190413898074,
                    "n_cpu_percent_c": 0.2799029896647232,
                    "n_cpu_percent_python": 2.3688677000819953,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.17339043007666025,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def calculate_gradient(anchor, truth, wrong):\n",
                    "lineno": 205,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.002894890390020604,
                    "n_cpu_percent_python": 0.021627518667832787,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.001118690980425447,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    return (-truth + wrong, -anchor, anchor)\n",
                    "lineno": 206,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0727913278207964,
                    "n_cpu_percent_python": 0.6379194208649109,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0440315001849966,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "def doc_to_vec(doc_indexes, mtx_embed):\n",
                    "lineno": 209,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.008433904148566377,
                    "n_cpu_percent_python": 0.08739797045101239,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.006588089978279186,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    return np.mean(mtx_embed[doc_indexes], axis = 0)\n",
                    "lineno": 210,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 219.80834673549649,
                    "n_cpu_percent_c": 2.5570416749973344,
                    "n_cpu_percent_python": 21.387751770312263,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 1.5117164528284623,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "    return texts[shift_value:] + texts[:shift_value]\n",
                    "lineno": 222,
                    "memory_samples": [
                        [
                            203966411964,
                            222.41483026240877
                        ]
                    ],
                    "n_avg_mb": 1.7553803795262386,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0015976066246969228,
                    "n_cpu_percent_python": 0.00827918444302004,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.1780881881713867,
                    "n_malloc_mb": 33.352227210998535,
                    "n_mallocs": 19,
                    "n_peak_mb": 2.1780881881713867,
                    "n_python_fraction": 0.04063727079979909,
                    "n_sys_percent": 0.0006797878430140056,
                    "n_usage_fraction": 0.022450308495792236
                }
            ],
            "percent_cpu_time": 39.62341293754776
        },
        "test/test.py": {
            "functions": [],
            "leaks": {},
            "lines": [
                {
                    "line": "import numpy as np\n",
                    "lineno": 1,
                    "memory_samples": [],
                    "n_avg_mb": 5.958683967590332,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.027854305306324153,
                    "n_cpu_percent_python": 0.012617909364689501,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 5.958683967590332,
                    "n_malloc_mb": 5.958683967590332,
                    "n_mallocs": 1,
                    "n_peak_mb": 5.958683967590332,
                    "n_python_fraction": 0.9915813778135004,
                    "n_sys_percent": 0.003679744772728231,
                    "n_usage_fraction": 0.004010955324063623
                },
                {
                    "line": "import matplotlib.pylab as plt\n",
                    "lineno": 2,
                    "memory_samples": [
                        [
                            1414840218,
                            22.517712821185754
                        ]
                    ],
                    "n_avg_mb": 17.850937843322754,
                    "n_copy_mb_s": 0.0479559320773578,
                    "n_cpu_percent_c": 0.034009610464590875,
                    "n_cpu_percent_python": 0.14677988262647354,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 17.850937843322754,
                    "n_malloc_mb": 17.850937843322754,
                    "n_mallocs": 1,
                    "n_peak_mb": 17.850937843322754,
                    "n_python_fraction": 0.9932311861231382,
                    "n_sys_percent": 0.019032356786320904,
                    "n_usage_fraction": 0.012015961002737772
                },
                {
                    "line": "from model import EmbeddingModel\n",
                    "lineno": 3,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.00011353298881420563,
                    "n_cpu_percent_python": 0.0007609449652426359,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.0002554428301879684,
                    "n_usage_fraction": 0.0
                },
                {
                    "line": "train_texts, val_texts = texts[:middle], texts[middle:]\n",
                    "lineno": 11,
                    "memory_samples": [
                        [
                            110069627062,
                            139.02681730849903
                        ]
                    ],
                    "n_avg_mb": 2.024216651916504,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 0.0,
                    "n_cpu_percent_python": 0.0,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 2.024216651916504,
                    "n_malloc_mb": 2.024216651916504,
                    "n_mallocs": 1,
                    "n_peak_mb": 2.024216651916504,
                    "n_python_fraction": 1.0,
                    "n_sys_percent": 0.0,
                    "n_usage_fraction": 0.0013625563297571647
                },
                {
                    "line": "model = EmbeddingModel(vocabulary)\n",
                    "lineno": 14,
                    "memory_samples": [],
                    "n_avg_mb": 0.0,
                    "n_copy_mb_s": 0.0,
                    "n_cpu_percent_c": 4.371372716386402e-05,
                    "n_cpu_percent_python": 0.0008406485993056585,
                    "n_gpu_avg_memory_mb": 0.0,
                    "n_gpu_peak_memory_mb": 0.0,
                    "n_gpu_percent": 0,
                    "n_growth_mb": 0.0,
                    "n_malloc_mb": 0.0,
                    "n_mallocs": 0,
                    "n_peak_mb": 0.0,
                    "n_python_fraction": 0,
                    "n_sys_percent": 0.00014998910498322153,
                    "n_usage_fraction": 0.0
                }
            ],
            "percent_cpu_time": 0.24613808153682462
        }
    },
    "gpu": false,
    "growth_rate": 14.897024348554767,
    "max_footprint_fname": "/Users/Iana_Kasimova/sgd/model.py",
    "max_footprint_lineno": 17,
    "max_footprint_mb": 223.38167476654053,
    "memory": true,
    "program": "test/test.py",
    "samples": [
        [
            4197892609,
            79.96359424522234
        ],
        [
            110323514095,
            219.40959529112993
        ],
        [
            110323520016,
            165.9535987139072
        ],
        [
            110638065717,
            221.11937259993175
        ]
    ]
}
